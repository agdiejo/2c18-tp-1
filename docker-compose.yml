version: '2'

services:
    gunicorn:
        build:
            context: ./py
        ports:
            - "8000:8000"
    node:
        build:
            context: ./js
        ports:
            - "3000:3000"
        command: npm run start 3000
    node_1:
        build:
            context: ./js
        ports:
            - "3001:3001"
        command: npm run start 3001
    node_2:
        build:
            context: ./js
        ports:
            - "3002:3002"
        command: npm run start 3002
    node_3:
        build:
            context: ./js
        ports:
            - "3003:3003"
        command: npm run start 3003
    nginx:
        image: nginx:1.15.3
        ports:
            - "5556:80"
        volumes:
            - ./nginx_reverse_proxy.conf:/etc/nginx/conf.d/default.conf:ro
            - ./static:/static:ro
        links:
            - gunicorn
            - node
            - node_1
            - node_2
            - node_3

    graphite:
        image: graphiteapp/graphite-statsd:1.1.3
        volumes:
            - ./statsd.config.js:/opt/statsd/config.js
            - ./graphite.storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf
        ports:
            - "8090:80"
            - "8125:8125/udp"
            - "8126:8126"

    grafana:
        image: grafana/grafana:5.0.4
        ports:
            - "80:3000"
        volumes:
            - "grafana_config:/var/lib/grafana"

    cadvisor:
        image: google/cadvisor:v0.27.4
        links:
            - graphite
        command: -storage_driver="statsd" -storage_driver_host="graphite:8125" -storage_driver_db="cadvisor" -storage_driver_buffer_duration="1s"
        ports:
            - "8080:8080"
        volumes:
            - "/:/rootfs:ro"
            - "/var/run:/var/run:rw"
            - "/sys:/sys:ro"
            - "/var/lib/docker/:/var/lib/docker:ro"

volumes:
    grafana_config:
        driver: local
